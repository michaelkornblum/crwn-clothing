{"ast":null,"code":"import _objectSpread from \"/home/michael/Projects/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/michael/Projects/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/michael/Projects/crwn-clothing/src/components/sign-up/sign-up.component.jsx\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { signUpStart } from \"../../redux/user/user.actions\";\nimport { SignUpContainer, SignUpTitle } from \"./sign-up.styles\";\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const _useState = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setUserCredentials = _useState2[1];\n\n  const displayName = userCredentials.displayName,\n        email = userCredentials.email,\n        password = userCredentials.password,\n        confirmPassword = userCredentials.confirmPassword;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setUserCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(SignUpContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(SignUpTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"I do not have a account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/home/michael/Projects/crwn-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUpContainer","SignUpTitle","SignUp","displayName","email","password","confirmPassword","userCredentials","setUserCredentials","handleSubmit","event","preventDefault","alert","handleChange","target","name","value","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\n\nimport { signUpStart } from \"../../redux/user/user.actions\";\n\nimport { SignUpContainer, SignUpTitle } from \"./sign-up.styles\";\n\nconst SignUp = ({ signUpStart }) => {\n\tconst [userCredentials, setUserCredentials] = useState({\n\t\tdisplayName: \"\",\n\t\temail: \"\",\n\t\tpassword: \"\",\n\t\tconfirmPassword: \"\"\n\t});\n\n\tconst { displayName, email, password, confirmPassword } = userCredentials;\n\n\tconst handleSubmit = async event => {\n\t\tevent.preventDefault();\n\t\tif (password !== confirmPassword) {\n\t\t\talert(\"passwords don't match\");\n\t\t\treturn;\n\t\t}\n\t\tsignUpStart({ displayName, email, password });\n\t};\n\n\tconst handleChange = event => {\n\t\tconst { name, value } = event.target;\n\n\t\tsetUserCredentials({ ...userCredentials, [name]: value });\n\t};\n\n\treturn (\n\t\t<SignUpContainer>\n\t\t\t<SignUpTitle>I do not have a account</SignUpTitle>\n\t\t\t<span>Sign up with your email and password</span>\n\t\t\t<form className=\"sign-up-form\" onSubmit={handleSubmit}>\n\t\t\t\t<FormInput\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"displayName\"\n\t\t\t\t\tvalue={displayName}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tlabel=\"Display Name\"\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<FormInput\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\tvalue={email}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<FormInput\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tvalue={password}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<FormInput\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tname=\"confirmPassword\"\n\t\t\t\t\tvalue={confirmPassword}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tlabel=\"Confirm Password\"\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<CustomButton type=\"submit\">SIGN UP</CustomButton>\n\t\t\t</form>\n\t\t</SignUpContainer>\n\t);\n};\n\nconst mapDispatchToProps = dispatch => ({\n\tsignUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(\n\tnull,\n\tmapDispatchToProps\n)(SignUp);\n"]},"metadata":{},"sourceType":"module"}