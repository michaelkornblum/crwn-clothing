{"ast":null,"code":"import _objectSpread from \"/home/michael/Projects/crwn-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport ShopActionTypes from \"./shop.types\";\nconst INITIAL_STATE = {\n  collections: null,\n  isFetching: false,\n  errorMessage: undefined\n};\n\nconst shopReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ShopActionTypes.FETCH_COLLECTIONS_START:\n      return _objectSpread({}, state, {\n        isFetching: true\n      });\n\n    case ShopActionTypes.FETCH_COLLECTIONS_SUCCESS:\n      return _objectSpread({}, state, {\n        collections: action.payload,\n        isFetching: false\n      });\n\n    case ShopActionTypes.FETCH_COLLECTIONS_FAILURE:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        errorMessage: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default shopReducer;","map":{"version":3,"sources":["/home/michael/Projects/crwn-clothing/client/src/redux/shop/shop.reducer.js"],"names":["ShopActionTypes","INITIAL_STATE","collections","isFetching","errorMessage","undefined","shopReducer","state","action","type","FETCH_COLLECTIONS_START","FETCH_COLLECTIONS_SUCCESS","payload","FETCH_COLLECTIONS_FAILURE"],"mappings":";AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,MAAMC,aAAa,GAAG;AACrBC,EAAAA,WAAW,EAAE,IADQ;AAErBC,EAAAA,UAAU,EAAE,KAFS;AAGrBC,EAAAA,YAAY,EAAEC;AAHO,CAAtB;;AAMA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,aAAT,EAAwBO,MAAxB,KAAmC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKT,eAAe,CAACU,uBAArB;AACC,+BAAYH,KAAZ;AAAmBJ,QAAAA,UAAU,EAAE;AAA/B;;AACD,SAAKH,eAAe,CAACW,yBAArB;AACC,+BAAYJ,KAAZ;AAAmBL,QAAAA,WAAW,EAAEM,MAAM,CAACI,OAAvC;AAAgDT,QAAAA,UAAU,EAAE;AAA5D;;AACD,SAAKH,eAAe,CAACa,yBAArB;AACC,+BACIN,KADJ;AAECJ,QAAAA,UAAU,EAAE,KAFb;AAGCC,QAAAA,YAAY,EAAEI,MAAM,CAACI;AAHtB;;AAKD;AACC,aAAOL,KAAP;AAZF;AAcA,CAfD;;AAiBA,eAAeD,WAAf","sourcesContent":["import ShopActionTypes from \"./shop.types\";\n\nconst INITIAL_STATE = {\n\tcollections: null,\n\tisFetching: false,\n\terrorMessage: undefined\n};\n\nconst shopReducer = (state = INITIAL_STATE, action) => {\n\tswitch (action.type) {\n\t\tcase ShopActionTypes.FETCH_COLLECTIONS_START:\n\t\t\treturn { ...state, isFetching: true };\n\t\tcase ShopActionTypes.FETCH_COLLECTIONS_SUCCESS:\n\t\t\treturn { ...state, collections: action.payload, isFetching: false };\n\t\tcase ShopActionTypes.FETCH_COLLECTIONS_FAILURE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisFetching: false,\n\t\t\t\terrorMessage: action.payload\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default shopReducer;\n"]},"metadata":{},"sourceType":"module"}