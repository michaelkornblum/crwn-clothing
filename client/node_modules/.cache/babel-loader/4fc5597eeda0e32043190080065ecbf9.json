{"ast":null,"code":"var _jsxFileName = \"/home/michael/Projects/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\nimport { selectIsCollectionsLoaded } from \"../../redux/shop/shop.selectors\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport CollectionsOverviewContainer from \"../../components/collections-overview/collections-overview.container\";\nimport CollectionPageContainer from \"../collection/collection.container\";\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const fetchCollectionsStartAsync = this.props.fetchCollectionsStartAsync;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isCollectionsLoaded = _this$props.isCollectionsLoaded;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      component: CollectionsOverviewContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !isCollectionsLoaded\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/michael/Projects/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","createStructuredSelector","connect","fetchCollectionsStartAsync","selectIsCollectionsLoaded","WithSpinner","CollectionsOverviewContainer","CollectionPageContainer","ShopPage","Component","componentDidMount","props","render","match","isCollectionsLoaded","path","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,yBAAT,QAA0C,iCAA1C;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,uBAAP,MAAoC,oCAApC;;AAEA,MAAMC,QAAN,SAAuBT,KAAK,CAACU,SAA7B,CAAuC;AACtCC,EAAAA,iBAAiB,GAAG;AAAA,UACXP,0BADW,GACoB,KAAKQ,KADzB,CACXR,0BADW;AAEnBA,IAAAA,0BAA0B;AAC1B;;AAEDS,EAAAA,MAAM,GAAG;AAAA,wBAC+B,KAAKD,KADpC;AAAA,UACAE,KADA,eACAA,KADA;AAAA,UACOC,mBADP,eACOA,mBADP;AAER,WACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD;AACC,MAAA,KAAK,MADN;AAEC,MAAA,IAAI,YAAKD,KAAK,CAACE,IAAX,CAFL;AAGC,MAAA,SAAS,EAAET,4BAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAMC,oBAAC,KAAD;AACC,MAAA,IAAI,YAAKO,KAAK,CAACE,IAAX,mBADL;AAEC,MAAA,MAAM,EAAEJ,KAAK,IACZ,oBAAC,yBAAD;AACC,QAAA,SAAS,EAAE,CAACG;AADb,SAEKH,KAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAND,CADD;AAkBA;;AA1BqC;;AA6BvC,MAAMK,kBAAkB,GAAGC,QAAQ,KAAK;AACvCd,EAAAA,0BAA0B,EAAE,MAAMc,QAAQ,CAACd,0BAA0B,EAA3B;AADH,CAAL,CAAnC;;AAIA,MAAMe,eAAe,GAAGjB,wBAAwB,CAAC;AAChDa,EAAAA,mBAAmB,EAAEV;AAD2B,CAAD,CAAhD;AAIA,eAAeF,OAAO,CACrBgB,eADqB,EAErBF,kBAFqB,CAAP,CAGbR,QAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\n\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\nimport { selectIsCollectionsLoaded } from \"../../redux/shop/shop.selectors\";\n\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport CollectionsOverviewContainer from \"../../components/collections-overview/collections-overview.container\";\nimport CollectionPageContainer from \"../collection/collection.container\";\n\nclass ShopPage extends React.Component {\n\tcomponentDidMount() {\n\t\tconst { fetchCollectionsStartAsync } = this.props;\n\t\tfetchCollectionsStartAsync();\n\t}\n\n\trender() {\n\t\tconst { match, isCollectionsLoaded } = this.props;\n\t\treturn (\n\t\t\t<div className=\"shop-page\">\n\t\t\t\t<Route\n\t\t\t\t\texact\n\t\t\t\t\tpath={`${match.path}`}\n\t\t\t\t\tcomponent={CollectionsOverviewContainer}\n\t\t\t\t/>\n\t\t\t\t<Route\n\t\t\t\t\tpath={`${match.path}/:collectionId`}\n\t\t\t\t\trender={props => (\n\t\t\t\t\t\t<CollectionPageWithSpinner\n\t\t\t\t\t\t\tisLoading={!isCollectionsLoaded}\n\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps = dispatch => ({\n\tfetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nconst mapStateToProps = createStructuredSelector({\n\tisCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}