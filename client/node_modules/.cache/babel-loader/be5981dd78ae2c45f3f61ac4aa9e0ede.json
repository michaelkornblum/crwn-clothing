{"ast":null,"code":"var _jsxFileName = \"/home/michael/Projects/crwn-clothing/src/components/sign-in/sign-in.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\"; // import { auth, signInWithGoogle } from '../../firebase/firebase.utils';\n\nimport { googleSignInStart } from \"../../redux/user/user.actions\";\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from \"./sign-in.styles\";\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          email: \"\",\n          password: \"\"\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            value = _event$target.value,\n            name = _event$target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  render() {\n    const googleSignInStart = this.props.googleSignInStart;\n    return React.createElement(SignInContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(SignInTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"I already have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      handleChange: this.handleChange,\n      value: this.state.email,\n      label: \"email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      label: \"password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(ButtonsBarContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \" Sign in \"), React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Sign in with Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/home/michael/Projects/crwn-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","connect","FormInput","CustomButton","googleSignInStart","SignInContainer","SignInTitle","ButtonsBarContainer","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","state","email","password","auth","signInWithEmailAndPassword","setState","error","console","log","handleChange","target","value","name","render","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB,C,CAEA;;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,SACCC,eADD,EAECC,WAFD,EAGCC,mBAHD,QAIO,kBAJP;;AAMA,MAAMC,MAAN,SAAqBR,KAAK,CAACS,SAA3B,CAAqC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SASnBC,YATmB,GASJ,MAAMC,KAAN,IAAe;AAC7BA,MAAAA,KAAK,CAACC,cAAN;AAD6B,0BAGD,KAAKC,KAHJ;AAAA,YAGrBC,KAHqB,eAGrBA,KAHqB;AAAA,YAGdC,QAHc,eAGdA,QAHc;;AAK7B,UAAI;AACH,cAAMC,IAAI,CAACC,0BAAL,CAAgCH,KAAhC,EAAuCC,QAAvC,CAAN;AACA,aAAKG,QAAL,CAAc;AAAEJ,UAAAA,KAAK,EAAE,EAAT;AAAaC,UAAAA,QAAQ,EAAE;AAAvB,SAAd;AACA,OAHD,CAGE,OAAOI,KAAP,EAAc;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA;AACD,KApBkB;;AAAA,SAsBnBG,YAtBmB,GAsBJX,KAAK,IAAI;AAAA,4BACCA,KAAK,CAACY,MADP;AAAA,YACfC,KADe,iBACfA,KADe;AAAA,YACRC,IADQ,iBACRA,IADQ;AAGvB,WAAKP,QAAL,CAAc;AAAE,SAACO,IAAD,GAAQD;AAAV,OAAd;AACA,KA1BkB;;AAGlB,SAAKX,KAAL,GAAa;AACZC,MAAAA,KAAK,EAAE,EADK;AAEZC,MAAAA,QAAQ,EAAE;AAFE,KAAb;AAIA;;AAqBDW,EAAAA,MAAM,GAAG;AAAA,UACAxB,iBADA,GACsB,KAAKO,KAD3B,CACAP,iBADA;AAER,WACC,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAFD,EAIC;AAAM,MAAA,QAAQ,EAAE,KAAKQ,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,SAAD;AACC,MAAA,IAAI,EAAC,OADN;AAEC,MAAA,IAAI,EAAC,OAFN;AAGC,MAAA,YAAY,EAAE,KAAKY,YAHpB;AAIC,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWC,KAJnB;AAKC,MAAA,KAAK,EAAC,OALP;AAMC,MAAA,QAAQ,MANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EASC,oBAAC,SAAD;AACC,MAAA,IAAI,EAAC,UADN;AAEC,MAAA,IAAI,EAAC,UAFN;AAGC,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,QAHnB;AAIC,MAAA,YAAY,EAAE,KAAKO,YAJpB;AAKC,MAAA,KAAK,EAAC,UALP;AAMC,MAAA,QAAQ,MANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATD,EAiBC,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,EAEC,oBAAC,YAAD;AACC,MAAA,IAAI,EAAC,QADN;AAEC,MAAA,OAAO,EAAEpB,iBAFV;AAGC,MAAA,cAAc,MAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFD,CAjBD,CAJD,CADD;AAmCA;;AAlEmC;;AAqErC,MAAMyB,kBAAkB,GAAGC,QAAQ,KAAK;AACvC1B,EAAAA,iBAAiB,EAAE0B,QAAQ,CAAC1B,iBAAiB,EAAlB;AADY,CAAL,CAAnC;;AAIA,eAAeH,OAAO,CACrB,IADqB,EAErB4B,kBAFqB,CAAP,CAGbrB,MAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\n\n// import { auth, signInWithGoogle } from '../../firebase/firebase.utils';\nimport { googleSignInStart } from \"../../redux/user/user.actions\";\n\nimport {\n\tSignInContainer,\n\tSignInTitle,\n\tButtonsBarContainer\n} from \"./sign-in.styles\";\n\nclass SignIn extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\temail: \"\",\n\t\t\tpassword: \"\"\n\t\t};\n\t}\n\n\thandleSubmit = async event => {\n\t\tevent.preventDefault();\n\n\t\tconst { email, password } = this.state;\n\n\t\ttry {\n\t\t\tawait auth.signInWithEmailAndPassword(email, password);\n\t\t\tthis.setState({ email: \"\", password: \"\" });\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n\n\thandleChange = event => {\n\t\tconst { value, name } = event.target;\n\n\t\tthis.setState({ [name]: value });\n\t};\n\n\trender() {\n\t\tconst { googleSignInStart } = this.props;\n\t\treturn (\n\t\t\t<SignInContainer>\n\t\t\t\t<SignInTitle>I already have an account</SignInTitle>\n\t\t\t\t<span>Sign in with your email and password</span>\n\n\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t<FormInput\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\tvalue={this.state.email}\n\t\t\t\t\t\tlabel=\"email\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<FormInput\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tvalue={this.state.password}\n\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\tlabel=\"password\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<ButtonsBarContainer>\n\t\t\t\t\t\t<CustomButton type=\"submit\"> Sign in </CustomButton>\n\t\t\t\t\t\t<CustomButton\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tonClick={googleSignInStart}\n\t\t\t\t\t\t\tisGoogleSignIn\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSign in with Google\n\t\t\t\t\t\t</CustomButton>\n\t\t\t\t\t</ButtonsBarContainer>\n\t\t\t\t</form>\n\t\t\t</SignInContainer>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps = dispatch => ({\n\tgoogleSignInStart: dispatch(googleSignInStart())\n});\n\nexport default connect(\n\tnull,\n\tmapDispatchToProps\n)(SignIn);\n"]},"metadata":{},"sourceType":"module"}