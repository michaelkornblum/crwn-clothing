{"ast":null,"code":"var _jsxFileName = \"/home/michael/Projects/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nconst CollectionOverviewsWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    const loading = this.state.loading;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: props => React.createElement(CollectionOverviewsWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/michael/Projects/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","firestore","convertCollectionsSnapshotToMap","updateCollections","WithSpinner","CollectionsOverview","CollectionPage","CollectionOverviewsWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","get","then","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SACCC,SADD,EAECC,+BAFD,QAGO,+BAHP;AAKA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,MAAMC,8BAA8B,GAAGH,WAAW,CAACC,mBAAD,CAAlD;AACA,MAAMG,yBAAyB,GAAGJ,WAAW,CAACE,cAAD,CAA7C;;AAEA,MAAMG,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACtCC,KADsC,GAC9B;AACPC,MAAAA,OAAO,EAAE;AADF,KAD8B;AAAA,SAKtCC,uBALsC,GAKZ,IALY;AAAA;;AAOtCC,EAAAA,iBAAiB,GAAG;AAAA,UACXX,iBADW,GACW,KAAKY,KADhB,CACXZ,iBADW;AAEnB,UAAMa,aAAa,GAAGf,SAAS,CAACgB,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACpC,YAAMC,cAAc,GAAGnB,+BAA+B,CAACkB,QAAD,CAAtD;AACAjB,MAAAA,iBAAiB,CAACkB,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAEV,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,KAJD;AAKA;;AAEDW,EAAAA,MAAM,GAAG;AAAA,UACAC,KADA,GACU,KAAKT,KADf,CACAS,KADA;AAAA,UAEAZ,OAFA,GAEY,KAAKD,KAFjB,CAEAC,OAFA;AAGR,WACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD;AACC,MAAA,KAAK,MADN;AAEC,MAAA,IAAI,YAAKY,KAAK,CAACC,IAAX,CAFL;AAGC,MAAA,MAAM,EAAEV,KAAK,IACZ,oBAAC,8BAAD;AACC,QAAA,SAAS,EAAEH;AADZ,SAEKG,KAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAWC,oBAAC,KAAD;AACC,MAAA,IAAI,YAAKS,KAAK,CAACC,IAAX,mBADL;AAEC,MAAA,MAAM,EAAEV,KAAK,IACZ,oBAAC,yBAAD;AACC,QAAA,SAAS,EAAEH;AADZ,SAEKG,KAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXD,CADD;AAuBA;;AA5CqC;;AA+CvC,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACvCxB,EAAAA,iBAAiB,EAAEkB,cAAc,IAChCM,QAAQ,CAACxB,iBAAiB,CAACkB,cAAD,CAAlB;AAF8B,CAAL,CAAnC;;AAKA,eAAerB,OAAO,CACrB,IADqB,EAErB0B,kBAFqB,CAAP,CAGbjB,QAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport {\n\tfirestore,\n\tconvertCollectionsSnapshotToMap\n} from \"../../firebase/firebase.utils\";\n\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\n\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\n\nconst CollectionOverviewsWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n\tstate = {\n\t\tloading: true\n\t};\n\n\tunsubscribeFromSnapshot = null;\n\n\tcomponentDidMount() {\n\t\tconst { updateCollections } = this.props;\n\t\tconst collectionRef = firestore.collection(\"collections\");\n\n\t\tcollectionRef.get().then(snapshot => {\n\t\t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n\t\t\tupdateCollections(collectionsMap);\n\t\t\tthis.setState({ loading: false });\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { match } = this.props;\n\t\tconst { loading } = this.state;\n\t\treturn (\n\t\t\t<div className=\"shop-page\">\n\t\t\t\t<Route\n\t\t\t\t\texact\n\t\t\t\t\tpath={`${match.path}`}\n\t\t\t\t\trender={props => (\n\t\t\t\t\t\t<CollectionOverviewsWithSpinner\n\t\t\t\t\t\t\tisLoading={loading}\n\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t\t<Route\n\t\t\t\t\tpath={`${match.path}/:collectionId`}\n\t\t\t\t\trender={props => (\n\t\t\t\t\t\t<CollectionPageWithSpinner\n\t\t\t\t\t\t\tisLoading={loading}\n\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps = dispatch => ({\n\tupdateCollections: collectionsMap =>\n\t\tdispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(\n\tnull,\n\tmapDispatchToProps\n)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}