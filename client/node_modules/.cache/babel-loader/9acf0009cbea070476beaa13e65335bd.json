{"ast":null,"code":"var _jsxFileName = \"/home/michael/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection(\"collections\");\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      console.log(collectionsMap);\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      component: CollectionsOverview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      component: CollectionPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default ShopPage;","map":{"version":3,"sources":["/home/michael/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","updateCollections","ShopPage","Component","unsubscribeFromSnapshot","componentDidMount","collectionRef","collection","onSnapshot","snapshot","collectionsMap","console","log","render","match","props","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SACCC,SADD,EAECC,+BAFD,QAGO,+BAHP;AAKA,SAASC,iBAAT,QAAkC,+BAAlC;;AAEA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACtCC,uBADsC,GACZ,IADY;AAAA;;AAGtCC,EAAAA,iBAAiB,GAAG;AACnB,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AAEA,SAAKH,uBAAL,GAA+BE,aAAa,CAACE,UAAd,CAC9B,MAAMC,QAAN,IAAkB;AACjB,YAAMC,cAAc,GAAGV,+BAA+B,CACrDS,QADqD,CAAtD;AAGAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,cAAZ;AACA,KAN6B,CAA/B;AAQA;;AAEDG,EAAAA,MAAM,GAAG;AAAA,UACAC,KADA,GACU,KAAKC,KADf,CACAD,KADA;AAER,WACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD;AACC,MAAA,KAAK,MADN;AAEC,MAAA,IAAI,YAAKA,KAAK,CAACE,IAAX,CAFL;AAGC,MAAA,SAAS,EAAEnB,mBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAMC,oBAAC,KAAD;AACC,MAAA,IAAI,YAAKiB,KAAK,CAACE,IAAX,mBADL;AAEC,MAAA,SAAS,EAAElB,cAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAND,CADD;AAaA;;AA/BqC;;AAkCvC,MAAMmB,kBAAkB,GAAGC,QAAQ,KAAK;AACvCjB,EAAAA,iBAAiB,EAAES,cAAc,IAChCQ,QAAQ,CAACjB,iBAAiB,CAACS,cAAD,CAAlB;AAF8B,CAAL,CAAnC;;AAKA,eAAeR,QAAf","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\n\nimport {\n\tfirestore,\n\tconvertCollectionsSnapshotToMap\n} from \"../../firebase/firebase.utils\";\n\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\n\nclass ShopPage extends React.Component {\n\tunsubscribeFromSnapshot = null;\n\n\tcomponentDidMount() {\n\t\tconst collectionRef = firestore.collection(\"collections\");\n\n\t\tthis.unsubscribeFromSnapshot = collectionRef.onSnapshot(\n\t\t\tasync snapshot => {\n\t\t\t\tconst collectionsMap = convertCollectionsSnapshotToMap(\n\t\t\t\t\tsnapshot\n\t\t\t\t);\n\t\t\t\tconsole.log(collectionsMap);\n\t\t\t}\n\t\t);\n\t}\n\n\trender() {\n\t\tconst { match } = this.props;\n\t\treturn (\n\t\t\t<div className=\"shop-page\">\n\t\t\t\t<Route\n\t\t\t\t\texact\n\t\t\t\t\tpath={`${match.path}`}\n\t\t\t\t\tcomponent={CollectionsOverview}\n\t\t\t\t/>\n\t\t\t\t<Route\n\t\t\t\t\tpath={`${match.path}/:collectionId`}\n\t\t\t\t\tcomponent={CollectionPage}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps = dispatch => ({\n\tupdateCollections: collectionsMap =>\n\t\tdispatch(updateCollections(collectionsMap))\n});\n\nexport default ShopPage;\n"]},"metadata":{},"sourceType":"module"}